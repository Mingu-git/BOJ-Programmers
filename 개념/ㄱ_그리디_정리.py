
"""
[그리디 알고리즘 정리] 06.23

1. 그리디 알고리즘이란  : 현제 상황에서 가장 좋은것만 고르는 방법 == 
ex ) 가장 큰 or 가장 작은 or 가장 최선,최적의 값 을 정답으로 원함.
+ 즉 가장 좋은 접근방법을 알고있어야 풀기쉬움 . 
+ 내가 이 접근방법을 즉석에만들어내는것도 좋지만 여러가지 유형의 접근방법을 아는것도 실전에서 더 효율적이라고 생각

2. 접근 방식 :  

주로 = 그리디 -> Dp -> graph

Ex1) 위치에따른 방식 (a~c~b 사이의 ~~~ 꿀따기)
: 왼쪽 ->오른쪽 -> 중간 (이3가지 분류에 다포함되게 설정)

Ex2) 

3. 같이 사용된 알골

꿀따기 - 누적합
"""

상황 

1. 우체국 / 각사람들 까지의 거리의 합이 최소가 되는 곳 ==>   중간값
최소가 되는곳이 있따 = 해가 존재한다 . = 2차원그래프라고 생각 = 상수들은 인풋값,상수값 ,변수는 정답.
이상황에서 변수가 정답이 된다는것은 변수의 위치에 따라 값이 방정식의 값이 바뀌게 되는데 이말은 즉
상수에의해 변수가 결정된다. 이문제와같이 상수가 단하나 = 인구 수 인경우 단순히 인구수의 중간값을 가지는것이 정답을 가진다고 간주할 수 있다.
따라서 중간값을 넘어서는 순간이 우체국의 위치가 된다.

2. 시작과 끝지점이 존제 ==> 주로 끝지점 정렬해서 활용하는것이 많이나옴

3. 이런상황에서 최소,최대값들을 많이 찾게되는데 이떄 heapq 을 써주면 시간복잡도 상승

4. 또한 상황에따라 합의계산을  + 최적의 상황 = 누적합을 이용하여 시간복잡도 상승